#!/usr/bin/env ruby
# frozen_string_literal: true

require 'tty-prompt'

home = Dir.getwd

if ARGV.length.positive? && (ARGV[0].to_i.to_s != ARGV[0])
  # first argument looks like something other than a number
  dir = ARGV.shift
  Dir.chdir dir
end

def bye
  puts
  puts 'Bye!'
  exit
end

def prompt
  @prompt ||= begin
    p = TTY::Prompt.new(interrupt: :signal)
    p.on(:keypress) do |event|
      p.trigger(:keyenter) if event.value.to_i.to_s == event.value
    end
    p.on(:keyescape) do |_event|
      bye
    end
    p
  end
end

def show_prompt(options)
  help = '(Use ‚Üë/‚Üì arrow keys or numbers to select)'
  prompt.select('Select an action:', options, enum: ')', cycle: true, help: help)
rescue TTY::Reader::InputInterrupt
  bye
end

def choose(options)
  if ARGV.length.positive?
    ARGV.shift
  else
    show_prompt(options)
  end
end

def args
  if ARGV.length.positive?
    ARGV
  else
    prompt.ask('Arguments:')&.split || []
  end
end

Kernel.trap('INT') { bye }

puts '‚ú® ŒºMenu ‚ú®'

loop do
  files = Dir.glob('*').sort

  dirs = files.select { |f| File.directory? f }
  execs = files.select { |f| File.executable? f } - dirs
  list = dirs + execs
  exit if list.empty?

  options = list.map.with_index do |name, value|
    {
      name: dirs.include?(name) ? "üìÅ #{name}" : name,
      value: value + 1
    }
  end

  choice = list[choose(options).to_i - 1]
  puts "‚§∑ #{choice}"

  if dirs.include?(choice)
    Dir.chdir choice
  else
    system(File.expand_path(choice), *args)
    Dir.chdir home
    exit
  end
end
